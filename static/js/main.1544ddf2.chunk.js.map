{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","api.ts","components/Loader/Loader.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","arguments","length","undefined","action","ALL","ACTIVE","COMPLETED","CLEAR","SOMEOFTYPES","initial","status","query","filter","filterReducer","_action$query","some","todos","todosReducer","todoList","input","toLowerCase","_title$toLowerCase","title","includes","_title$toLowerCase2","completed","_title$toLowerCase3","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","_jsx","className","children","TodoList","_useState","useState","_useState2","_slicedToArray","todosFromServer","setTodosFromServer","_useState3","_useState4","isLoading","setIsLoading","dispatch","useDispatch","useSelector","getTodosFromServer","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","todosDownload","wrap","_context","prev","next","sent","todosActions","stop","apply","useEffect","updateTodosState","_jsxs","_Fragment","map","id","onClick","currentTodoActions","classNames","TodoFilter","stateData","updateStates","filterValue","queryValue","filterActions","onSubmit","event","preventDefault","onChange","filterType","currentTarget","value","placeholder","queryData","style","pointerEvents","TodoModal","user","setUser","loader","setLoader","getUserData","_ref2","userFromServer","userId","concat","useLayoutEffect","_ref3","_ref4","name","email","href","App","Root","Provider","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1544ddf2.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\nconst ALL = 'filter/ALL';\nconst ACTIVE = 'filter/ACTIVE';\nconst COMPLETED = 'filter/COMPLETED';\nconst CLEAR = 'filter/CLEAR';\n\nconst SOMEOFTYPES = [ALL, ACTIVE, COMPLETED, CLEAR];\n\ntype FilterAll = { type: typeof ALL } & State;\ntype FilterACTIVE = { type: typeof ACTIVE } & State;\ntype FilterCOMPLETED = { type: typeof COMPLETED } & State;\ntype QueryCLEAR = { type: typeof CLEAR } & State;\n\ntype Action = FilterAll | FilterACTIVE | FilterCOMPLETED | QueryCLEAR;\ntype State = { status: Status, query: string };\n\nconst filterAll = (query: string): FilterAll => ({\n  type: ALL,\n  status: 'all',\n  query,\n});\n\nconst filterActive = (query: string): FilterACTIVE => ({\n  type: ACTIVE,\n  status: 'active',\n  query,\n});\n\nconst filterCompleted = (query: string): FilterCOMPLETED => ({\n  type: COMPLETED,\n  status: 'completed',\n  query,\n});\n\nconst queryClear = (filter: Status): QueryCLEAR => ({\n  type: CLEAR,\n  status: filter,\n  query: '',\n});\n\nconst initial: State = {\n  status: 'all',\n  query: '',\n};\n\nexport const actions = {\n  filterAll,\n  filterActive,\n  filterCompleted,\n  queryClear,\n};\n\nconst filterReducer = (state: State = initial, action: Action): State => {\n  const { status, query = '' } = action;\n\n  if (SOMEOFTYPES.some(type => type === action.type)) {\n    return { status, query };\n  }\n\n  return state;\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\nconst ALL = 'todos/ALL';\nconst ACTIVE = 'todos/ACTIVE';\nconst COMPLETED = 'todos/COMPLETED';\n\ntype FilterAll = { type: typeof ALL } & State;\ntype FilterACTIVE = { type: typeof ACTIVE } & State;\ntype FilterCOMPLETED = { type: typeof COMPLETED } & State;\ntype Action = FilterAll | FilterACTIVE | FilterCOMPLETED;\n\ntype State = { query: string, todos: Todo[] };\n\nconst filterAll = (todos: Todo[], query: string): FilterAll => ({\n  type: ALL,\n  query,\n  todos,\n});\n\nconst filterActive = (todos: Todo[], query: string): FilterACTIVE => ({\n  type: ACTIVE,\n  query,\n  todos,\n});\n\nconst filterCompleted = (todos: Todo[], query: string): FilterCOMPLETED => ({\n  type: COMPLETED,\n  query,\n  todos,\n});\n\nexport const actions = { filterAll, filterActive, filterCompleted };\n\nconst todosReducer = (todoList: Todo[] = [], action: Action): Todo[] => {\n  const { type, query, todos } = action;\n  const input = query ? query.toLowerCase() : '';\n\n  switch (type) {\n    case 'todos/ALL': {\n      return todos.filter(todo => {\n        const { title } = todo;\n\n        if (title) {\n          return title.toLowerCase()?.includes(input);\n        }\n\n        return todo;\n      });\n    }\n\n    case 'todos/ACTIVE':\n      return todos.filter(todo => {\n        const { title, completed } = todo;\n\n        if (title) {\n          return title.toLowerCase()?.includes(input) && !completed;\n        }\n\n        return todo;\n      });\n\n    case 'todos/COMPLETED':\n      return todos.filter(todo => {\n        const { title, completed } = todo;\n\n        if (title) {\n          return title.toLowerCase()?.includes(input) && completed;\n        }\n\n        return todo;\n      });\n\n    default: return todoList;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { getTodos } from '../../api';\nimport { RootState } from '../../app/store';\nimport { actions as todosActions } from '../../features/todos';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\nexport const TodoList: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const filter = useSelector<RootState, string>(state => state.filter.status);\n  const query = useSelector<RootState, string>(state => state.filter.query);\n  const todos = useSelector<RootState, Todo[]>(state => state.todos);\n  const currentTodo = useSelector<RootState, Todo | null>(\n    state => state.currentTodo,\n  );\n\n  const updateTodosState = () => {\n    switch (filter) {\n      case 'all':\n        return dispatch(todosActions.filterAll(todosFromServer, query));\n\n      case 'active':\n        return dispatch(todosActions.filterActive(todosFromServer, query));\n\n      case 'completed':\n        return dispatch(todosActions.filterCompleted(todosFromServer, query));\n\n      default:\n        return todos;\n    }\n  };\n\n  const showTodo = (todoData: Todo) => {\n    dispatch(currentTodoActions.setTodo(todoData));\n  };\n\n  const getTodosFromServer = async () => {\n    setIsLoading(true);\n\n    const todosDownload: Todo[] = await getTodos();\n\n    try {\n      setTodosFromServer(todosDownload);\n      dispatch(todosActions.filterAll(todosDownload, ''));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  useEffect(() => {\n    updateTodosState();\n  }, [filter, query]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      {(todosFromServer.length > 0 && !todos.length) && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n      {todosFromServer.length > 0 && todos.length > 0 && (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {todos && todos.map(todo => {\n              const {\n                id,\n                title,\n                completed,\n              } = todo;\n\n              return (\n                <tr data-cy=\"todo\" key={id}>\n                  <td className=\"is-vcentered\">{id}</td>\n                  <td className=\"is-vcentered\">\n                    {completed && (\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    )}\n                  </td>\n\n                  <td className=\"is-vcentered is-expanded\">\n                    <p className={completed\n                      ? 'has-text-success'\n                      : 'has-text-danger'}\n                    >\n                      {title}\n                    </p>\n                  </td>\n\n                  <td className=\"has-text-right is-vcentered\">\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => showTodo(todo)}\n                    >\n                      <span className=\"icon\">\n                        <i className={classNames(\n                          'far',\n                          { 'fa-eye-slash': currentTodo?.id === id },\n                          { 'fa-eye': currentTodo?.id !== id },\n                        )}\n                        />\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","/* eslint-disable no-console */\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../app/store';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const filter = useSelector<RootState, Status>(state => state.filter.status);\n  const query = useSelector<RootState, string>(state => state.filter.query);\n  const stateData = useSelector<RootState>(state => state.filter);\n\n  const dispatch = useDispatch();\n\n  const updateStates = (filterValue: string, queryValue: string) => {\n    switch (filterValue) {\n      case 'all':\n        return dispatch(filterActions.filterAll(queryValue));\n\n      case 'active':\n        return dispatch(filterActions.filterActive(queryValue));\n\n      case 'completed':\n        return dispatch(filterActions.filterCompleted(queryValue));\n\n      default:\n        return stateData;\n    }\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const filterType = event.currentTarget.value;\n\n    updateStates(filterType, query);\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const queryData = event.currentTarget.value;\n\n    updateStates(filter, queryData);\n  };\n\n  const clear = () => {\n    dispatch(filterActions.queryClear(filter));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelect}\n            value={filter}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleInput}\n          value={query}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clear}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useLayoutEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\nimport { Loader } from '../Loader';\n\ntype Props = {\n  currentTodo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({ currentTodo }) => {\n  const dispatch = useDispatch();\n\n  const [user, setUser] = useState<User | null>(null);\n  const [loader, setLoader] = useState(false);\n\n  const getUserData = async () => {\n    if (currentTodo) {\n      setLoader(true);\n      const userFromServer = await getUser(currentTodo.userId);\n\n      try {\n        setUser(userFromServer);\n      } finally {\n        setLoader(false);\n      }\n    }\n  };\n\n  useLayoutEffect(() => {\n    getUserData();\n  }, []);\n\n  const { id, title, completed } = currentTodo ?? {};\n  const { name, email } = user ?? {};\n\n  const hideTodo = () => {\n    dispatch(currentTodoActions.removeTodo());\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loader ? <Loader /> : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={hideTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href={`mailto:${email}`}>{name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useSelector } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { RootState } from './app/store';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const currentTodo = useSelector<RootState, Todo | null>(\n    state => state.currentTodo,\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal currentTodo={currentTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}