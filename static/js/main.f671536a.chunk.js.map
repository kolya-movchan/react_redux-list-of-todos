{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","api.ts","components/Loader/Loader.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","arguments","length","undefined","action","initial","status","query","filterValue","filterReducer","todos","todosReducer","todoList","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","_jsx","className","children","TodoList","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","dispatch","useDispatch","useSelector","getTodosFromServer","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","todosDownload","wrap","_context","prev","next","sent","todosActions","finish","stop","apply","useEffect","_jsxs","_Fragment","map","id","title","completed","includes","validateTodo","onClick","currentTodoActions","classNames","Fragment","TodoFilter","onSubmit","event","preventDefault","onChange","filterType","currentTarget","value","filterActions","placeholder","queryData","style","pointerEvents","TodoModal","user","setUser","_useState3","_useState4","loader","setLoader","getUserData","_ref2","userFromServer","userId","concat","useLayoutEffect","_ref3","_ref4","name","email","href","App","Root","Provider","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f671536a.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\nconst FILTER = 'filter/FILTER';\nconst QUERY = 'filter/QUERY';\n\ntype Action = Filter | Query;\ntype State = { status: Status, query: string };\n\ntype Filter = { type: typeof FILTER, payload: Status } ;\ntype Query = { type: typeof QUERY, payload: string } ;\n\nconst initial: State = {\n  status: 'all',\n  query: '',\n};\n\nconst filter = (filterValue: Status): Filter => ({\n  type: FILTER,\n  payload: filterValue,\n});\n\nconst setQuery = (query = ''): Query => ({\n  type: QUERY,\n  payload: query,\n});\n\nexport const actions = { filter, setQuery };\n\nconst filterReducer = (state: State = initial, action: Action): State => {\n  const { type, payload } = action;\n  const { status, query } = state;\n\n  switch (type) {\n    case 'filter/FILTER':\n      return {\n        status: payload,\n        query,\n      };\n\n    case 'filter/QUERY':\n      return {\n        status,\n        query: payload,\n      };\n\n    default: return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\nconst TODOS = 'todos/ALL';\n\ntype AddTodos = { type: typeof TODOS, payload: Todo[] };\n\nconst addTodos = (todos: Todo[]): AddTodos => ({\n  type: TODOS,\n  payload: todos,\n});\n\nexport const actions = { addTodos };\n\nconst todosReducer = (todoList: Todo[] = [], action: AddTodos): Todo[] => {\n  if (action.type === 'todos/ALL') {\n    return action.payload;\n  }\n\n  return todoList;\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { getTodos } from '../../api';\nimport { RootState } from '../../app/store';\nimport { actions as todosActions } from '../../features/todos';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\nexport const TodoList: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const filter = useSelector<RootState, string>(state => state.filter.status);\n  const query = useSelector<RootState, string>(state => state.filter.query);\n  const todos = useSelector<RootState, Todo[]>(state => state.todos);\n  const currentTodo = useSelector<RootState, Todo | null>(\n    state => state.currentTodo,\n  );\n\n  const showTodo = (todoData: Todo) => {\n    dispatch(currentTodoActions.setTodo(todoData));\n  };\n\n  const getTodosFromServer = async () => {\n    setIsLoading(true);\n\n    try {\n      const todosDownload: Todo[] = await getTodos();\n\n      dispatch(todosActions.addTodos(todosDownload));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const validateTodo = (title: string, completed: boolean) => {\n    const eliminatedTodo = !title.includes(query)\n      || (filter === 'active' && completed)\n      || (filter === 'completed' && !completed);\n\n    if (eliminatedTodo) {\n      return false;\n    }\n\n    return true;\n  };\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      {(todos.length > 0 && !todos.length) && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n      {todos.length > 0 && todos.length > 0 && (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {todos.length > 0 && todos.map(todo => {\n              const {\n                id,\n                title,\n                completed,\n              } = todo;\n\n              if (!validateTodo(title, completed)) {\n                return <Fragment key={id} />;\n              }\n\n              return (\n                <tr data-cy=\"todo\" key={id}>\n                  <td className=\"is-vcentered\">{id}</td>\n                  <td className=\"is-vcentered\">\n                    {completed && (\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    )}\n                  </td>\n\n                  <td className=\"is-vcentered is-expanded\">\n                    <p className={completed\n                      ? 'has-text-success'\n                      : 'has-text-danger'}\n                    >\n                      {title}\n                    </p>\n                  </td>\n\n                  <td className=\"has-text-right is-vcentered\">\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => showTodo(todo)}\n                    >\n                      <span className=\"icon\">\n                        <i className={classNames(\n                          'far',\n                          { 'fa-eye-slash': currentTodo?.id === id },\n                          { 'fa-eye': currentTodo?.id !== id },\n                        )}\n                        />\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../app/store';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const filter = useSelector<RootState, Status>(state => state.filter.status);\n  const query = useSelector<RootState, string>(state => state.filter.query);\n\n  const dispatch = useDispatch();\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const filterType = event.currentTarget.value as Status;\n\n    dispatch(filterActions.filter(filterType));\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const queryData = event.currentTarget.value;\n\n    dispatch(filterActions.setQuery(queryData));\n  };\n\n  const clear = () => dispatch(filterActions.setQuery());\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelect}\n            value={filter}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleInput}\n          value={query}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clear}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import React, { useLayoutEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\nimport { Loader } from '../Loader';\n\ntype Props = {\n  currentTodo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({ currentTodo }) => {\n  const dispatch = useDispatch();\n\n  const [user, setUser] = useState<User | null>(null);\n  const [loader, setLoader] = useState(false);\n\n  const getUserData = async () => {\n    if (currentTodo) {\n      setLoader(true);\n      try {\n        const userFromServer = await getUser(currentTodo.userId);\n\n        setUser(userFromServer);\n      } finally {\n        setLoader(false);\n      }\n    }\n  };\n\n  useLayoutEffect(() => {\n    getUserData();\n  }, []);\n\n  const { id, title, completed } = currentTodo ?? {};\n  const { name, email } = user ?? {};\n\n  const hideTodo = () => {\n    dispatch(currentTodoActions.removeTodo());\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loader ? <Loader /> : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={hideTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href={`mailto:${email}`}>{name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useSelector } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { RootState } from './app/store';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const currentTodo = useSelector<RootState, Todo | null>(\n    state => state.currentTodo,\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal currentTodo={currentTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}